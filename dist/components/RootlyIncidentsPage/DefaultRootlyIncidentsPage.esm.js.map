{"version":3,"file":"DefaultRootlyIncidentsPage.esm.js","sources":["../../../src/components/RootlyIncidentsPage/DefaultRootlyIncidentsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RootlyServiceIncidentsPageLayout } from './RootlyServiceIncidentsPageLayout';\nimport { RootlyFunctionalityIncidentsPageLayout } from './RootlyFunctionalityIncidentsPageLayout';\nimport { RootlyTeamIncidentsPageLayout } from './RootlyTeamIncidentsPageLayout';\n\nimport { catalogApiRef, useEntity } from '@backstage/plugin-catalog-react';\nimport { ROOTLY_ANNOTATION_FUNCTIONALITY_ID, ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG, ROOTLY_ANNOTATION_SERVICE_ID, ROOTLY_ANNOTATION_SERVICE_SLUG, ROOTLY_ANNOTATION_TEAM_ID, ROOTLY_ANNOTATION_TEAM_SLUG } from '@rootly/backstage-plugin-common';\nimport { Entity } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\n\nexport const DefaultRootlyIncidentsPage = ({ organizationId }: { organizationId?: string }) => {\n  const [entities, setEntities] = useState<Entity[]>([]);\n  const { entity } = useEntity();\n  const catalogApi = useApi(catalogApiRef); // Use the catalog API\n\n  useEffect(() => {\n    const fetchEntities = async () => {\n      let fetchedEntities: Entity[] = [];\n\n      if (entity.kind === 'System') {\n        const hasPartRelation = entity.relations?.filter(relation => relation.type === \"hasPart\");\n        if (hasPartRelation) {\n          for (const relation of hasPartRelation) {\n            const _entity = await catalogApi.getEntityByRef(relation.targetRef);\n            if (_entity) {\n              fetchedEntities.push(_entity);\n            }\n          }\n        }\n      } else {\n        fetchedEntities = [entity];\n      }\n\n      setEntities(fetchedEntities);\n    };\n\n    fetchEntities();\n  }, [entity, catalogApi]);\n\n  return (\n    <>\n      {entities.map((_entity) => {\n        return buildEntity(_entity, organizationId);\n      })}\n    </>\n  );\n};\n\nfunction buildEntity(entity: Entity, organizationId?: string) {\n  const service_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_SLUG];\n\n  const functionality_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_FUNCTIONALITY_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG];\n\n  const team_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_SLUG];\n\n  const resource = () => {\n    if (service_id_annotation) {\n      return <RootlyServiceIncidentsPageLayout entity={entity} organizationId={organizationId} />;\n    } else if (functionality_id_annotation) {\n      return <RootlyFunctionalityIncidentsPageLayout entity={entity} organizationId={organizationId} />;\n    } else if (team_id_annotation) {\n      return <RootlyTeamIncidentsPageLayout entity={entity} organizationId={organizationId} />;\n    }\n    return <div>No Rootly annotations found</div>;\n  };\n\n  return <div>{resource()}</div>;\n}\n"],"names":[],"mappings":";;;;;;;;AAUO,MAAM,0BAA6B,GAAA,CAAC,EAAE,cAAA,EAAkD,KAAA;AAC7F,EAAA,MAAM,CAAC,QAAU,EAAA,WAAW,CAAI,GAAA,QAAA,CAAmB,EAAE,CAAA,CAAA;AACrD,EAAM,MAAA,EAAE,MAAO,EAAA,GAAI,SAAU,EAAA,CAAA;AAC7B,EAAM,MAAA,UAAA,GAAa,OAAO,aAAa,CAAA,CAAA;AAEvC,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,gBAAgB,YAAY;AAChC,MAAA,IAAI,kBAA4B,EAAC,CAAA;AAEjC,MAAI,IAAA,MAAA,CAAO,SAAS,QAAU,EAAA;AAC5B,QAAA,MAAM,kBAAkB,MAAO,CAAA,SAAA,EAAW,OAAO,CAAY,QAAA,KAAA,QAAA,CAAS,SAAS,SAAS,CAAA,CAAA;AACxF,QAAA,IAAI,eAAiB,EAAA;AACnB,UAAA,KAAA,MAAW,YAAY,eAAiB,EAAA;AACtC,YAAA,MAAM,OAAU,GAAA,MAAM,UAAW,CAAA,cAAA,CAAe,SAAS,SAAS,CAAA,CAAA;AAClE,YAAA,IAAI,OAAS,EAAA;AACX,cAAA,eAAA,CAAgB,KAAK,OAAO,CAAA,CAAA;AAAA,aAC9B;AAAA,WACF;AAAA,SACF;AAAA,OACK,MAAA;AACL,QAAA,eAAA,GAAkB,CAAC,MAAM,CAAA,CAAA;AAAA,OAC3B;AAEA,MAAA,WAAA,CAAY,eAAe,CAAA,CAAA;AAAA,KAC7B,CAAA;AAEA,IAAc,aAAA,EAAA,CAAA;AAAA,GACb,EAAA,CAAC,MAAQ,EAAA,UAAU,CAAC,CAAA,CAAA;AAEvB,EAAA,uBAEK,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,QAAA,CAAS,GAAI,CAAA,CAAC,OAAY,KAAA;AACzB,IAAO,OAAA,WAAA,CAAY,SAAS,cAAc,CAAA,CAAA;AAAA,GAC3C,CACH,CAAA,CAAA;AAEJ,EAAA;AAEA,SAAS,WAAA,CAAY,QAAgB,cAAyB,EAAA;AAC5D,EAAM,MAAA,qBAAA,GACJ,OAAO,QAAS,CAAA,WAAA,GAAc,4BAA4B,CAC1D,IAAA,MAAA,CAAO,QAAS,CAAA,WAAA,GAAc,8BAA8B,CAAA,CAAA;AAE9D,EAAM,MAAA,2BAAA,GACJ,OAAO,QAAS,CAAA,WAAA,GAAc,kCAAkC,CAChE,IAAA,MAAA,CAAO,QAAS,CAAA,WAAA,GAAc,oCAAoC,CAAA,CAAA;AAEpE,EAAM,MAAA,kBAAA,GACJ,OAAO,QAAS,CAAA,WAAA,GAAc,yBAAyB,CACvD,IAAA,MAAA,CAAO,QAAS,CAAA,WAAA,GAAc,2BAA2B,CAAA,CAAA;AAE3D,EAAA,MAAM,WAAW,MAAM;AACrB,IAAA,IAAI,qBAAuB,EAAA;AACzB,MAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,gCAAiC,EAAA,EAAA,MAAA,EAAgB,cAAgC,EAAA,CAAA,CAAA;AAAA,eAChF,2BAA6B,EAAA;AACtC,MAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,sCAAuC,EAAA,EAAA,MAAA,EAAgB,cAAgC,EAAA,CAAA,CAAA;AAAA,eACtF,kBAAoB,EAAA;AAC7B,MAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,6BAA8B,EAAA,EAAA,MAAA,EAAgB,cAAgC,EAAA,CAAA,CAAA;AAAA,KACxF;AACA,IAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,aAAI,6BAA2B,CAAA,CAAA;AAAA,GACzC,CAAA;AAEA,EAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA,IAAA,EAAA,QAAA,EAAW,CAAA,CAAA;AAC1B;;;;"}