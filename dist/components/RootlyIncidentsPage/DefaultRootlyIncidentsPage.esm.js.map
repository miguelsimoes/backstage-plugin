{"version":3,"file":"DefaultRootlyIncidentsPage.esm.js","sources":["../../../src/components/RootlyIncidentsPage/DefaultRootlyIncidentsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RootlyServiceIncidentsPageLayout } from './RootlyServiceIncidentsPageLayout';\nimport { RootlyFunctionalityIncidentsPageLayout } from './RootlyFunctionalityIncidentsPageLayout';\nimport { RootlyTeamIncidentsPageLayout } from './RootlyTeamIncidentsPageLayout';\n\nimport { catalogApiRef, useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  ROOTLY_ANNOTATION_FUNCTIONALITY_ID,\n  ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG,\n  ROOTLY_ANNOTATION_ORG_ID,\n  ROOTLY_ANNOTATION_SERVICE_ID,\n  ROOTLY_ANNOTATION_SERVICE_SLUG,\n  ROOTLY_ANNOTATION_TEAM_ID,\n  ROOTLY_ANNOTATION_TEAM_SLUG,\n  RootlyEntity,\n} from '@rootly/backstage-plugin-common';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { RootlySystemIncidentsPageLayout } from './RootlySystemIncidentsPageLayout';\n\nexport const DefaultRootlyIncidentsPage = ({\n  organizationId,\n}: {\n  organizationId?: string;\n}) => {\n  const [entities, setEntities] = useState<RootlyEntity[]>([]);\n  const { entity } = useEntity();\n  const rootlyEntity = entity as RootlyEntity;\n  const catalogApi = useApi(catalogApiRef); // Use the catalog API\n\n  useEffect(() => {\n    const fetchEntities = async () => {\n      let fetchedEntities: RootlyEntity[] = [];\n\n      if (entity.kind === 'System') {\n        const hasPartRelation = entity.relations?.filter(\n          relation => relation.type === 'hasPart',\n        );\n        if (hasPartRelation && hasPartRelation.length > 0) {\n          for (const relation of hasPartRelation) {\n            const _entity = (await catalogApi.getEntityByRef(\n              relation.targetRef,\n            )) as RootlyEntity;\n            if (_entity && _entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]) {\n              _entity.rootlyKind = kindOf(_entity);\n              fetchedEntities.push(_entity as RootlyEntity);\n            }\n          }\n        }\n      } else {\n        rootlyEntity.rootlyKind = kindOf(rootlyEntity);\n        fetchedEntities = [entity as RootlyEntity];\n      }\n\n      setEntities(fetchedEntities);\n    };\n\n    fetchEntities();\n  }, [entity, rootlyEntity, catalogApi]);\n\n  if (entities.length === 1) {\n    return buildEntity(entities[0], organizationId)\n  } else if (entities.length > 1) {\n    return buildEntities(entities);\n  }\n  return <div>No Rootly annotations found</div>;\n};\n\nfunction kindOf(entity: RootlyEntity): string | undefined {\n  const service_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_SLUG];\n\n  const functionality_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_FUNCTIONALITY_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG];\n\n  const team_id_annotation =\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_ID] ||\n    entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_SLUG];\n\n  if (service_id_annotation) {\n    return 'Service';\n  } else if (functionality_id_annotation) {\n    return 'Functionality';\n  } else if (team_id_annotation) {\n    return 'Team';\n  }\n  return undefined;\n}\n\nfunction buildEntities(\n  entities: RootlyEntity[]\n) {\n  return (\n    <RootlySystemIncidentsPageLayout\n      entities={entities}\n    />\n  );\n}\n\nfunction buildEntity(entity: RootlyEntity, organizationId?: string) {\n  const resource = () => {\n    if (entity.rootlyKind === 'Service') {\n      return (\n        <RootlyServiceIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    } else if (entity.rootlyKind === 'Functionality') {\n      return (\n        <RootlyFunctionalityIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    } else if (entity.rootlyKind === 'Team') {\n      return (\n        <RootlyTeamIncidentsPageLayout\n          entity={entity}\n          organizationId={organizationId || entity.metadata.annotations?.[ROOTLY_ANNOTATION_ORG_ID]}\n        />\n      );\n    }\n    return <div>No Rootly annotations found</div>;\n  };\n\n  return <div>{resource()}</div>;\n}\n"],"names":[],"mappings":"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"}