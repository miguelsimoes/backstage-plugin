{"version":3,"file":"ColoredChips.esm.js","sources":["../../../src/components/UI/ColoredChips.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chip } from '@material-ui/core';\nimport { useApi } from '@backstage/core-plugin-api';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  RootlyService,\n  RootlyFunctionality,\n  RootlyEnvironment,\n  RootlyIncidentType,\n  RootlyTeam,\n} from '@rootly/backstage-plugin-common';\nimport { ColoredChip } from './ColoredChip';\n\nexport const ColoredChips = ({\n  objects,\n}: {\n  objects:\n    | RootlyService[]\n    | RootlyFunctionality[]\n    | RootlyEnvironment[]\n    | RootlyIncidentType[]\n    | RootlyTeam[];\n}) => {\n  const navigate = useNavigate();\n  const catalogApi = useApi(catalogApiRef); // Use the catalog API\n\n  const [componentUrls, setComponentUrls] = useState<Record<string, string>>({});\n\n  // Fetch the component URLs dynamically\n  useEffect(() => {\n    const fetchComponentUrls = async () => {\n      const newComponentUrls: Record<string, string> = {};\n      for (const obj of objects) {\n        const entityRef = (obj.attributes as any).backstage_id;\n        try {\n          // Search for the component entity in the catalog\n          if (entityRef) {\n            const component = await catalogApi.getEntityByRef(entityRef);\n            if (component) {\n              newComponentUrls[entityRef] = `/catalog/${component.metadata.namespace}/component/${component.metadata.name}`;\n            }\n        }\n        } catch (error) {\n         // No op\n        }\n      }\n      setComponentUrls(newComponentUrls);\n    };\n\n    if (objects?.length) {\n      fetchComponentUrls();\n    }\n  }, [objects, catalogApi]);\n\n  if (objects?.length > 0) {\n    return (\n      <>\n        {objects.map(r => {\n          const entityRef = (r.attributes as any).backstage_id;\n          const url = componentUrls[entityRef];\n          return (\n            <ColoredChip\n              key={r.id}\n              label={r.attributes.name}\n              tooltip={r.attributes.description}\n              color={r.attributes.color}\n              onClick={url ? () => navigate(url) : () => {}}\n              icon={url ? <LinkIcon /> : undefined}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return <Chip label=\"N/A\" size=\"small\" />;\n};\n"],"names":[],"mappings":";;;;;;;;AAeO,MAAM,eAAe,CAAC;AAAA,EAC3B,OAAA;AACF,CAOM,KAAA;AACJ,EAAA,MAAM,WAAW,WAAY,EAAA,CAAA;AAC7B,EAAM,MAAA,UAAA,GAAa,OAAO,aAAa,CAAA,CAAA;AAEvC,EAAA,MAAM,CAAC,aAAe,EAAA,gBAAgB,CAAI,GAAA,QAAA,CAAiC,EAAE,CAAA,CAAA;AAG7E,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,qBAAqB,YAAY;AACrC,MAAA,MAAM,mBAA2C,EAAC,CAAA;AAClD,MAAA,KAAA,MAAW,OAAO,OAAS,EAAA;AACzB,QAAM,MAAA,SAAA,GAAa,IAAI,UAAmB,CAAA,YAAA,CAAA;AAC1C,QAAI,IAAA;AAEF,UAAA,IAAI,SAAW,EAAA;AACb,YAAA,MAAM,SAAY,GAAA,MAAM,UAAW,CAAA,cAAA,CAAe,SAAS,CAAA,CAAA;AAC3D,YAAA,IAAI,SAAW,EAAA;AACb,cAAiB,gBAAA,CAAA,SAAS,IAAI,CAAY,SAAA,EAAA,SAAA,CAAU,SAAS,SAAS,CAAA,WAAA,EAAc,SAAU,CAAA,QAAA,CAAS,IAAI,CAAA,CAAA,CAAA;AAAA,aAC7G;AAAA,WACJ;AAAA,iBACS,KAAO,EAAA;AAAA,SAEhB;AAAA,OACF;AACA,MAAA,gBAAA,CAAiB,gBAAgB,CAAA,CAAA;AAAA,KACnC,CAAA;AAEA,IAAA,IAAI,SAAS,MAAQ,EAAA;AACnB,MAAmB,kBAAA,EAAA,CAAA;AAAA,KACrB;AAAA,GACC,EAAA,CAAC,OAAS,EAAA,UAAU,CAAC,CAAA,CAAA;AAExB,EAAI,IAAA,OAAA,EAAS,SAAS,CAAG,EAAA;AACvB,IACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,OAAQ,CAAA,GAAA,CAAI,CAAK,CAAA,KAAA;AAChB,MAAM,MAAA,SAAA,GAAa,EAAE,UAAmB,CAAA,YAAA,CAAA;AACxC,MAAM,MAAA,GAAA,GAAM,cAAc,SAAS,CAAA,CAAA;AACnC,MACE,uBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,WAAA;AAAA,QAAA;AAAA,UACC,KAAK,CAAE,CAAA,EAAA;AAAA,UACP,KAAA,EAAO,EAAE,UAAW,CAAA,IAAA;AAAA,UACpB,OAAA,EAAS,EAAE,UAAW,CAAA,WAAA;AAAA,UACtB,KAAA,EAAO,EAAE,UAAW,CAAA,KAAA;AAAA,UACpB,SAAS,GAAM,GAAA,MAAM,QAAS,CAAA,GAAG,IAAI,MAAM;AAAA,WAAC;AAAA,UAC5C,IAAM,EAAA,GAAA,mBAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAS,CAAK,GAAA,KAAA,CAAA;AAAA,SAAA;AAAA,OAC7B,CAAA;AAAA,KAEH,CACH,CAAA,CAAA;AAAA,GAEJ;AAEA,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAK,KAAM,EAAA,KAAA,EAAM,MAAK,OAAQ,EAAA,CAAA,CAAA;AACxC;;;;"}